{
  "enabled": true,
  "name": "GitHub Issues Integration",
  "description": "Automatically sync tasks with GitHub Issues and create features from issues",
  "version": "1.0",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/tasks.md",
      "**/requirements.md"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "ðŸ”— **GitHub Issues Integration Active**\n\nI'm checking if we should sync this work with GitHub Issues.\n\n## ðŸ“‹ **What are GitHub Issues?**\n\nGitHub Issues are like a **task management system** built into your repository:\n- Each issue = one task or bug report\n- People can comment and discuss\n- Issues can be assigned to developers\n- Issues can be linked to Pull Requests\n- When you merge a PR, it can automatically close the issue\n\n## ðŸ”„ **Integration Options:**\n\n### **Option 1: Create Issues from Tasks**\n```bash\n# For each incomplete task in tasks.md\n# Create a GitHub Issue automatically\n\ngh issue create \\\n  --title \"Task: [TASK_NAME]\" \\\n  --body \"## Description\\n[TASK_DESCRIPTION]\\n\\n## Acceptance Criteria\\n- [ ] Task completed\\n- [ ] Tests added\\n- [ ] Documentation updated\\n\\n## Related\\n- Spec: sistema-gestion-040\\n- Priority: [HIGH/MEDIUM/LOW]\" \\\n  --label \"task,enhancement\"\n```\n\n### **Option 2: Create Features from Issues**\n```bash\n# When someone creates an issue with label \"feature\"\n# Automatically trigger our Feature Lifecycle Manager\n\ngh issue list --label \"feature\" --state \"open\" | while read issue; do\n  echo \"ðŸš€ Creating feature from issue: $issue\"\n  # Trigger Feature Lifecycle Manager\ndone\n```\n\n### **Option 3: Sync Task Status**\n```bash\n# When you complete a task in tasks.md\n# Automatically close the related GitHub Issue\n\ngh issue close [ISSUE_NUMBER] --comment \"âœ… Task completed in commit $(git rev-parse --short HEAD)\"\n```\n\n## ðŸŽ¯ **Current Analysis:**\n\nBased on the file you just edited, I will:\n\n### **1. Scan for new tasks**\n- Look for tasks marked as `[ ]` (incomplete)\n- Check if they already have GitHub Issues\n- Suggest creating issues for complex tasks\n\n### **2. Check for completed tasks**\n- Look for tasks marked as `[x]` (complete)\n- Find related GitHub Issues\n- Suggest closing completed issues\n\n### **3. Feature detection**\n- Identify tasks that should become features\n- Check if there are GitHub Issues labeled \"feature\"\n- Suggest creating feature branches from issues\n\n## ðŸ”§ **Setup GitHub CLI (if not installed):**\n\n```bash\n# Install GitHub CLI\nbrew install gh  # macOS\n# or\nsudo apt install gh  # Linux\n\n# Authenticate\ngh auth login\n\n# Test connection\ngh repo view\n```\n\n## ðŸ“Š **Integration Benefits:**\n\n### **For Team Collaboration:**\n- âœ… **Visibility**: Everyone sees what's being worked on\n- âœ… **Discussion**: Team can comment on specific tasks\n- âœ… **Assignment**: Tasks can be assigned to specific developers\n- âœ… **Tracking**: Progress is visible in GitHub interface\n\n### **For Project Management:**\n- âœ… **Automatic linking**: PRs automatically reference issues\n- âœ… **Milestone tracking**: Group issues by release milestones\n- âœ… **Labels**: Organize by priority, type, component\n- âœ… **Templates**: Standardized issue creation\n\n## ðŸŽ¯ **Recommended Workflow:**\n\n```\n1. Task identified in tasks.md\n   â†“\n2. GitHub Issue created automatically\n   â†“\n3. Developer assigned to issue\n   â†“\n4. Feature branch created (feature/issue-123)\n   â†“\n5. Development work with commits referencing issue\n   â†“\n6. PR created with \"Closes #123\" in description\n   â†“\n7. PR merged â†’ Issue automatically closed\n```\n\n## ðŸš€ **Would you like me to:**\n\n1. **Set up GitHub Issues** for current tasks?\n2. **Create issue templates** for consistent formatting?\n3. **Configure automatic syncing** between tasks.md and issues?\n4. **Show you how to use** GitHub Issues for project management?\n\n**Note**: This integration makes your project more professional and helps with team collaboration, but it's optional if you're working alone.\n\nWhat would you prefer to do with GitHub Issues integration?"
  }
}
