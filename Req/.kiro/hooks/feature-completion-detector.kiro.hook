{
  "enabled": true,
  "name": "Feature Completion Detector",
  "description": "Detecta automáticamente cuando una feature está completa y ejecuta el proceso de merge",
  "version": "1.0",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/tasks.md",
      "**/README.md",
      "**/*feature*.md"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "🔍 **Detectando estado de features...**\n\nVoy a revisar si alguna feature está lista para ser completada y mergeada.\n\n## 📋 **Verificaciones automáticas:**\n\n### 1. **Estado de tareas**\n```bash\n# Revisar archivos de tareas\nfind . -name \"*tasks*.md\" -o -name \"*feature*.md\" | xargs grep -l \"\\[x\\]\"\n```\n\n### 2. **Estado de la rama actual**\n```bash\nCURRENT_BRANCH=$(git branch --show-current)\necho \"📍 Rama actual: $CURRENT_BRANCH\"\n\n# Si es una feature branch\nif [[ $CURRENT_BRANCH == feature/* ]]; then\n    echo \"🎯 Feature branch detectada: $CURRENT_BRANCH\"\n    \n    # Verificar commits pendientes\n    UNCOMMITTED=$(git status --porcelain | wc -l)\n    echo \"📝 Archivos sin commit: $UNCOMMITTED\"\n    \n    # Verificar si está sincronizada con dev\n    git fetch origin dev\n    BEHIND=$(git rev-list --count HEAD..origin/dev)\n    echo \"⬇️ Commits detrás de dev: $BEHIND\"\nfi\n```\n\n### 3. **Análisis de completitud**\n\n#### **Para features en progreso:**\n- [ ] ¿Todas las subtareas están marcadas como completadas?\n- [ ] ¿Los tests están pasando?\n- [ ] ¿El código está linted y formateado?\n- [ ] ¿No hay TODOs o FIXMEs críticos?\n- [ ] ¿La documentación está actualizada?\n\n#### **Si la feature está completa:**\n\n## 🚀 **Proceso de Completion Automático**\n\n### **Paso 1: Pre-merge Validations**\n```bash\necho \"🔍 Ejecutando validaciones pre-merge...\"\n\n# Tests completos\ncd Req/backend && npm run test\ncd ../frontend && npm run test\n\n# Lint y build\ncd Req/backend && npm run lint && npm run build\ncd ../frontend && npm run lint && npm run build\n\necho \"✅ Validaciones completadas\"\n```\n\n### **Paso 2: Sync con Dev**\n```bash\necho \"🔄 Sincronizando con dev...\"\ngit checkout dev\ngit pull origin dev\ngit checkout $CURRENT_BRANCH\ngit merge dev\n\n# Resolver conflictos si existen\nif [ $? -ne 0 ]; then\n    echo \"⚠️ Conflictos detectados - resolución manual requerida\"\n    exit 1\nfi\n```\n\n### **Paso 3: Crear PR Automático**\n```bash\necho \"📝 Creando Pull Request...\"\n\n# Push final\ngit push origin $CURRENT_BRANCH\n\n# Crear PR con template completo\nFEATURE_NAME=$(echo $CURRENT_BRANCH | sed 's/feature\\///')\n\ngh pr create \\\n  --base dev \\\n  --head $CURRENT_BRANCH \\\n  --title \"feat: $FEATURE_NAME\" \\\n  --body \"## 🎯 Feature Completed: $FEATURE_NAME\n\n### ✅ Completitud Checklist\n- [x] Todas las subtareas completadas\n- [x] Tests unitarios pasando\n- [x] Tests de integración pasando\n- [x] Lint y format OK\n- [x] Build exitoso\n- [x] Documentación actualizada\n- [x] Sin conflictos con dev\n\n### 📊 Métricas\n- Commits: $(git rev-list --count dev..$CURRENT_BRANCH)\n- Archivos modificados: $(git diff --name-only dev | wc -l)\n- Líneas agregadas: $(git diff --stat dev | tail -1)\n\n### 🔍 Code Review\n- [ ] Lógica de negocio revisada\n- [ ] Seguridad validada\n- [ ] Performance aceptable\n- [ ] UX/UI aprobado\n\n**🤖 PR creado automáticamente por Feature Completion Detector**\"\n\necho \"✅ PR creado exitosamente\"\n```\n\n### **Paso 4: Post-PR Actions**\n```bash\necho \"📋 Acciones post-PR:\"\necho \"1. ✅ PR creado y listo para review\"\necho \"2. 🔔 Notificaciones enviadas a reviewers\"\necho \"3. 📊 Métricas de feature registradas\"\necho \"4. ⏳ Esperando aprobación para auto-merge\"\n```\n\n## 🎯 **Detección Inteligente**\n\n### **Criterios para auto-completion:**\n1. **Rama feature/** activa\n2. **90%+ de tareas completadas** en archivos de tracking\n3. **Tests pasando** en CI/CD\n4. **No hay TODOs críticos** en el código\n5. **Documentación actualizada**\n\n### **Acciones automáticas:**\n- ✅ Validaciones pre-merge\n- ✅ Sync con dev\n- ✅ Creación de PR\n- ✅ Notificaciones a team\n- ✅ Métricas y reporting\n\n## 📊 **Status Report**\n\nBasado en el archivo modificado, voy a:\n\n1. **Analizar el estado actual** de las features\n2. **Detectar features completadas** o cerca de completarse\n3. **Ejecutar acciones automáticas** si corresponde\n4. **Generar reporte** de progreso\n\n¿Procedo con el análisis automático de completitud de features?"
  }
}
